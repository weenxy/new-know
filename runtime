runtime是OC中的运行时机制，它的工作就是把编译期要确定的一些事推迟到了运行时来做，比如方法的执行。这在一定程度上提高了程序的灵活性，不是所有东西在一开始就写死的了，但灵活性提高的时候，也会有一些安全性的问题，比如没有了方法的编译器检查，可能到运行的时候才发现没有实现，导致程序crash。所以说嘛，灵活性与安全性是个二选一的问题，不可兼顾。
runtime相当于OC这门原因的基石，还是要掌握的，其中要重点掌握的概念就是类和对象、元类的概念，还有isa指针以及一些具体应用，比如KVO，对象的内存分配问题，还有就是一些其他的常用功能，比如动态绑定、方法交换等。
isa指针其实是面向对象的一种简写(A is a B)，通过这个指针来确定当前对象所属的类。其中实例对象的isa指针是指向类对象，类对象的isa指针指向元类(meta class),元类的isa指针又指向了根元类，根元类的isa指针指向了NSObject对象，NDObject对象的isa指针指向了nil，从而形成了一个闭环。
说到对象的内存布局，因为方法什么的，都是静态的，所有实例对象都可以调用同样的方法，所以一个app程序中只需要保留一个方法地址就可以，这个地址分配在了类对象中。而实例变量的值是不同对象有不同的值，所以要在实例对象分配的空间上存储的。类对象上存储的只是实例方法，类方法的存储是在元类上的。
